@page "/customerlist/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using Session_27.Shared;

<h3>Edit Customer Info</h3>
@if (isLoading) {
    <div class="lds-hourglass"></div>
}


else{
<div class="col-md-6">
    <input type="hidden" class="form-control" id="id" @bind="Customer.Id" />
</div>
<div class="col-md-6">
    <label class="form-label">Name</label>
    <input class="form-control" id="name" @bind="Customer.Name" />
</div>
<div class="col-md-6">
    <label class="form-label">Surname</label>
    <input class="form-control" id="surname" @bind="Customer.Surname" />
</div>
<div class="col-md-6">
    <label class="form-label">Phone</label>
    <input class="form-control" id="phone" @bind="Customer.Phone" />
</div>
<div class="col-md-6">
    <label class="form-label">Tin</label>
    <input class="form-control" id="tin" @bind="Customer.Tin" />
</div>


<div class="row mt-2">
    <div class="col">
        <button class="btn btn-success" @onclick="OnUpdate">Edit Customer Info</button>
        <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
    </div>
</div>
}

@code {

    [Parameter] public int? Id { get; set; }
    CustomerEditDto Customer { get; set; } 
    bool isLoading = true;
    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }
    private async Task LoadItemsFromServer() {
        if (Id.HasValue)
            Customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("customerlist");
    }
    private async Task OnUpdate()
    {
        HttpResponseMessage? response;
        response = await httpClient.PutAsJsonAsync("customer", Customer);
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customerlist");
    }

    

    


}
