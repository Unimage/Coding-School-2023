@page "/engineerlist/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using Session_27.Shared;
@using Session_27.Model;

<h3>Edit Engineer</h3>
@if (isLoading) {
    <div class="lds-hourglass"></div>
}
else {
    <div class="col-md-6">
        <input type="hidden" class="form-control" id="code" @bind="Engineer.Id" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Name</label>
        <input class="form-control" id="code" @bind="Engineer.Name" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Surname</label>
        <input class="form-control" id="description" @bind="Engineer.Surname" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Salary Per Month</label>
        <input class="form-control" id="price" @bind="Engineer.SalaryPerMonth" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Manager ID</label>
        <input class="form-control" id="price" @bind="Engineer.ManagerId" />
    </div>
    <div class="row mt-2">
        <div class="col-md-6">
            <button class="btn btn-success" @onclick="OnSave">Save Changes</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}
@code {
    [Parameter] public int? Id { get; set; }
    EngineerEditDto Engineer { get; set; }
    bool isLoading = true;

    protected override async Task OnInitializedAsync() {
        isLoading = false;
        Engineer = await httpClient.GetFromJsonAsync<EngineerEditDto>($"engineer/{Id}");

    }

    private void OnCancel() {
        navigationManager.NavigateTo("engineerlist");
    }

    private async Task OnSave() {
        HttpResponseMessage? response = null;
        response = await httpClient.PutAsJsonAsync("engineer", Engineer);
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("engineerlist");
    }
}
