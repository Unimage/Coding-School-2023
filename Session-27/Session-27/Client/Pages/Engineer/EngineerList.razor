@page "/engineerlist"
@using Session_27.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<h3>Engineer List</h3>

@if (isLoading)
{
    <p>Loading ...</p>
}
else
{
    <button class="btn btn-primary" @onclick="CreateItem">Create</button>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>SalaryPerMonth</th>
                <th>Manager</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var engineer in engineerList) {
                <tr>
                    <td>@engineer.Name</td>
                    <td>@engineer.Surname</td>
                    <td>@engineer.SalaryPerMonth</td>
                    <td>@engineer.Manager.Name - @engineer.Manager.Surname </td>

                    <td>
                        <button class="btn btn-primary" @onclick="()=> EditItem(engineer)">Edit</button>
                        <button class="btn btn-danger" @onclick="()=> DeleteItem(engineer)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EngineerListDto> engineerList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer()
    {
        engineerList = await httpClient.GetFromJsonAsync<List<EngineerListDto>>("engineer");
    }

    private void CreateItem()
    {
        navigationManager.NavigateTo("engineerlist/edit");
    }

    private void EditItem(EngineerListDto engineer) {
        navigationManager.NavigateTo($"engineerlist/edit/{engineer.Id}");
    }


    //works
    private async Task DeleteItem(EngineerListDto engineer) {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"engineer/{engineer.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}