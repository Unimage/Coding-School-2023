@page "/servicetasklist"
@using Session_27.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<h3>Service Task List </h3>


@if (isLoading)
{
    <p> Loading ... </p>
}
else
{
    <button class="btn btn-primary" @onclick="CreateItem">Create</button>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Code</th>
                <th>Description</th>
                <th>Hours</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var task in taskList) //create the list
            {
             <tr>
                 <td>@task.Code</td>
                 <td>@task.Description </td>
                 <td>@task.Hours</td>
                 <td>
                        <button class="btn btn-primary" @onclick="()=> EditTask(task)" >Edit</button>
                        <button class="btn btn-danger" @onclick="()=> DeleteTask(task)">Delete</button>
                    </td>
             </tr>   
            }
        </tbody>
    </table>
}

@code {
    private List<ServiceTaskListDto> taskList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }
    
    //Load
    private async Task LoadItemsFromServer()
    {
        taskList = await httpClient.GetFromJsonAsync<List<ServiceTaskListDto>>("servicetask");
    }

    //Create
    private void CreateItem()
    {
        navigationManager.NavigateTo("servicetasklist/create");
    }

    //Edit 
    private void EditTask(ServiceTaskListDto task)
    {
        navigationManager.NavigateTo($"servicetask/edit/{task.Id}");
    }
    
    //Delete
    private async Task DeleteTask(ServiceTaskListDto task)
    {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"servicetask/{task.Id}"); 
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }



}
