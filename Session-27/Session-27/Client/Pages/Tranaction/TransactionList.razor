@page "/transactionlist"
@using Session_27.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
<h3>Transaction Management</h3>


@if (isLoading) {
    <p>Loading ... ta nevra mou</p>
}
else {
    <button class="btn btn-primary" @onclick="()=> CreateItem()">New Transaction</button>
        <table class="table table-striped table-hover">
        <thead>
                <tr>
                    <th>@</th>
                    <th>Model</th>
                    <th>Registration Number</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var car in carList) {
                    <tr>
                        <td>@car.Brand</td>
                        <td>@car.Model</td>
                        <td>@car.CarRegistrationNumber</td>
                        <td>
                            <button class="btn btn-primary"@onclick="()=> EditItem(car)" >Edit</button>
                            <button class="btn btn-danger" @onclick="()=> DeleteItem(car)" >Delete</button>
                        </td>
                    </tr>
            }
            </tbody>
    </table>
    
}
















@code {
    bool isLoading { get; set; } = true;
    private List<TransactionListDto> transactionList = new();

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }
    private async Task LoadItemsFromServer() {
        transactionList = await httpClient.GetFromJsonAsync<List<TransactionListDto>>("transaction");
    }


}
