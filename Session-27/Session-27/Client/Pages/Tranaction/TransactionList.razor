@page "/transactionlist"
@using Session_27.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
<h3>Transaction Management</h3>


@if (isLoading) {
    <p>Loading ... ta nevra mou</p>
}
else {
    <button class="btn btn-primary">New Transaction</button>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Date</th>
                <th>Total Price</th>
                <th>Customer Name</th>
                <th>Manager Name</th>
                <th>Car VIN Numner</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trans in transactionList) {
                <tr>
                    <td>@trans.Date</td>
                    <td>@trans.TotalPrice</td>
                    <td>@trans.Customer.FullName </td>
                    <td>@trans.Car.CarRegistrationNumber </td>
                    <td>
                        <button class="btn btn-primary" >Edit Transaction</button>
                        <button class="btn btn-danger" >Delete Transaction</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
















@code {
    bool isLoading { get; set; } = true;
    private List<TransactionListDto> transactionList = new();

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }
    private async Task LoadItemsFromServer() {
        transactionList = await httpClient.GetFromJsonAsync<List<TransactionListDto>>("transaction");
    }


}
