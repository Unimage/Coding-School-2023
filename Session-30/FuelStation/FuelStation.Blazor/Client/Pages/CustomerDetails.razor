@page "/customers/details/{ID:guid?}"
@using FuelStation.Blazor.Shared.Services;
@using FuelStation.Blazor.Shared.ViewModels;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject LoginStatus LoginStatus
@inject AuthorizationHandler AuthorizationHandler
@if (IsAuthorized())
{
    <h3>Customer Details</h3>
    @if (isLoading)
    {
        <p>Loading ...</p>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Name</label>
                <input class="form-control" @bind="@Customer.Name" disabled />
            </div>
            <div class="col-md-6">
                <label class="form-label">Surname</label>
                <input class="form-control" @bind="@Customer.Surname" disabled />
            </div>
            <div class="col-md-6">
                <label class="form-label">Customer Loyalty Card</label>
                <input class="form-control" @bind="@Customer.CardNumber" disabled />
            </div>
            <div class="row mt-2">
                <div class="col">
                    <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
                </div>
            </div>
        </div>
        <div class="row mt-5">
            <h4 class="col-xs-6">
                Customer's Transactions:
            </h4>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Payment Method</th>
                        <th>TotalPrice</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Customer.Trans)
                    {
                        <tr>
                            <td>@transaction.Date</td>
                            <td>@transaction.PaymentMethod</td>
                            <td>@transaction.TotalValue</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

}
else {
    <FuelStation.Blazor.Client.Components.Unauthorized />
}


@code {
    [Parameter] public Guid? ID { get; set; }
    private CustomerViewModel? Customer = null!;
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        if (ID == null) {
            Customer = new();
        }
        else {
            Customer = await httpClient.GetFromJsonAsync<CustomerViewModel>($"/customers/details/{ID}");
                isLoading = false;
        }

    }
    private void OnCancel() {
        navigationManager.NavigateTo("customers");
    }
    private bool IsAuthorized() {
        return AuthorizationHandler.HasAccessToCustomers(LoginStatus);
    }
}
